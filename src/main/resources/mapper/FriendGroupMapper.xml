<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eleven.mapper.FriendGroupMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="baseMap" type="com.eleven.entity.FriendGroup">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="group_name" property="groupName" />
        <result column="create_time" property="createTime" />
        <result column="group_total" property="groupTotal" />
        <result column="update_time" property="updateTime" />

        <collection property="myFriendList" ofType="com.eleven.entity.MyFriend">
            <id column="id" property="id" />
            <result column="my_account" property="myAccount" />
            <result column="friend_account" property="friendAccount" />
            <result column="particular" property="particular" />
            <result column="blocked" property="blocked" />
            <result column="del_flag" property="delFlag" />
            <result column="create_time" property="createTime" />
            <result column="update_time" property="updateTime" />
            <result column="nickname" property="nickname" />
            <result column="tag" property="tag" />
            <result column="intro" property="intro" />
            <result column="friend_group" property="friendGroup" />
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id AS userId, group_name AS groupName, create_time AS createTime, group_total AS groupTotal, update_time AS updateTime
    </sql>
    <insert id="insertBat">
        insert into im_friend_group
            (id,user_id,group_name,create_time,group_total)
        values
        <foreach collection="list" separator="," item="group" >
            (#{group.id},#{group.userId},#{group.groupName},#{group.createTime},#{group.groupTotal})
        </foreach>
    </insert>
    <select id="getMyGroup" resultMap="baseMap">
        select
            *
        from im_friend_group
        where user_id = #{account}
    </select>
    <select id="getGroupByLike" resultMap="baseMap">
        select
            *
        from im_friend_group
        <where>
            <include refid="queryLike" />
            or user_id = 'admin'
        </where>

    </select>
    <select id="getGroupByAccount" resultMap="baseMap">
        select
            tb.*,
            mf.*
        from im_friend_group tb
        left join im_my_friend mf on tb.id = mf.friend_group
        where tb.user_id = #{account}
    </select>
    <sql id="queryLike">
        <if test="groupName != null">
            AND group_name like '%${groupName}%'
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
    </sql>

</mapper>

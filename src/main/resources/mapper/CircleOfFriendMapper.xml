<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eleven.mapper.CircleOfFriendMapper">

    <resultMap id="baseMap" type="com.eleven.entity.CircleOfFriend">
        <id column="id" property="id" /><!---->
        <result column="utterer" property="utterer" /><!---->
        <result column="text" property="text" /><!---->
        <result column="create_time" property="createTime" /><!---->
        <result column="update_time" property="updateTime" /><!---->
        <result column="del_flag" property="delFlag" /><!---->
        <result column="tb_username" property="creator" />
        <result column="tb_account_url" property="accountUrl" />
        <collection property="circleOssList" ofType="com.eleven.entity.CircleOss">
            <id property="id" column="ico_id" />
            <result property="circleId" column="ico_circle_id"/>
            <result property="sort" column="ico_sort"/>
            <result property="url" column="ico_url" />
        </collection>
        <collection property="circleReviewList" ofType="com.eleven.entity.CircleReview">
            <id property="id" column="icr_id" />
            <result property="circleId" column="icr_circle_id"/>
            <result property="reviewId" column="icr_review_id" />
            <result property="reviewContent" column="icr_review_content" />
            <result property="createTime" column="icr_create_time" />
            <result property="creator" column="creator" /> <!--发表人昵称-->
            <result property="reply" column="reply" /> <!--回复谁-->
            <result property="accountUrl" column="iu_account_url" /> <!--发表人昵称-->
        </collection>
    </resultMap>
    <update id="updateById">
        update im_circle_of_friend
        <set>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="text != null">
                text = #{text},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="queryLast20Circles" resultMap="baseMap">
        select
            *
        from im_circle_of_friend
        where
            del_flag = '1'
        and utterer in
        <foreach collection="list" item="id" open="(" separator="," close=")" >
            #{id}
        </foreach>
        limit 20
    </select>
    <select id="queryOwnCircle" resultMap="baseMap">
        select
            tb.* ,
            ico.id as ico_id,
            ico.circle_id as ico_circle_id,
            ico.sort as ico_sort,
            ico.url as ico_url,
            icr.id as icr_id,
            icr.circle_id as icr_circle_id,
            icr.review_id as icr_review_id,
            icr.review_content as icr_review_content,
            icr.parent_id as icr_parent_id,
            iro.id as iro_id,
            iro.review_id as iro_review_id,
            iro.url as iro_url,
            iro.sort as iro_sort
        from im_circle_of_friend tb
        left join im_circle_oss ico on ico.circle_id = tb.id
        left join im_circle_review icr on tb.id = icr.circle_id
        left join im_review_oss iro on iro.review_id = icr.id
        <where>
            tb.del_flag = '1'
            <if test="id != null">
                and tb.id = #{id}
            </if>
            <if test="utterer != null">
                and utterer = #{utterer}
            </if>
        </where>

    </select>
    <select id="getCircleList" resultMap="baseMap">
        select tb.*,
            iuuu.username as tb_username,
            iuuu.account_url as tb_account_url,
            ico.id             as ico_id,
            ico.circle_id      as ico_circle_id,
            ico.sort           as ico_sort,
            ico.url            as ico_url,
            icr.id             as icr_id,
            icr.circle_id      as icr_circle_id,
            icr.review_id      as icr_review_id,
            icr.review_content as icr_review_content,
            icr.create_time    as icr_create_time,
            iu.account_url     as iu_account_url,
            iu.username        as creator,
            iuu.username       as reply
        from im_circle_of_friend tb
        left join im_circle_oss ico on tb.id = ico.circle_id
        left join im_circle_review icr on tb.id = icr.circle_id
        left join im_user iu on icr.review_id = iu.account
        left join im_user iuu on icr.reply = iuu.account
        left join im_user iuuu on tb.utterer = iuuu.account
        <where>
            tb.del_flag = '1'
            and utterer in
            <foreach collection="list" item="account" open="(" separator="," close=")">
                #{account}
            </foreach>
        </where>
        order by tb.create_time DESC, icr.create_time ASC
    </select>
</mapper>
